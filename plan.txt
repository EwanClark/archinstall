!figure if secure boot is in setup mode and if it isn't then tell user to enter setup mode

get boot partition in format /dev/{partition e.g. nvme1n1p1 or sda1}
get swap partition in format /dev/{partition e.g. nvme1n1p1 or sda1}
get root partition in format /dev/{partition e.g. nvme1n1p1 or sda1}

get root password
get username
get usernames password

# format partitions
run mkfs.fat -F 32 {boot partition}
run mkswap {swap partition}
run mkfs.ext4 {root partition}

# mount partitions
run mount {root partition} /mnt
run mount --mkdir {boot partition} /mnt/boot/efi
run swapon {swap partition}

# install system
run pacstrap /mnt base Linux line-firmware intel-ucode sof-firmware base-devel grub efibootmgr nano networkmanager nvidia-dkms nvidia-settings nvidia-utils sbctl linux-headers os-prober

# generate file system tab
run genfstab -U /mnt > /mnt/etc/fstab

# enter system
run arch-chroot /mnt

# setup timezone and clock
run ln -sf /usr/share/zoneinfo/Europe/London /etc/localtime
run hwclock --systohc

# set locale
sed -i '/^#en_GB.UTF-8 UTF-8/s/^#//' /etc/locale.gen
run locale-gen
run echo "LANG=en_GB.UTF-8" > /etc/locale.conf

# set hostname
run echo "arch" > /etc/hostname

# root password and add user
!print to user to enter root password
passwd
run useradd -m -G wheel -s /bin/bash username
!print to user to enter password for user
passwd username
sed -i '/^# %wheel ALL=(ALL) ALL/s/^# //' /etc/sudoers && visudo -c

# enable core services
run systemctl enable NetworkManager

# setup secure boot
run sbctl create-keys
run sbctl enroll-keys --Microsoft
run sbctl sign /boot/vmlinuz-linux
run sbctl sign /boot/efi/EFI/arch/grubx64.efi

# setup nvidida
run nvidia-xconfig
run sed -i 's/^#GRUB_DISABLE_OS_PROBER=false/GRUB_DISABLE_OS_PROBER=false/' /etc/default/grub
run sed -i '/^GRUB_CMDLINE_LINUX_DEFAULT=/s/".*"/"log_level=3 nvidia-drm.modeset=1"/' /etc/default/grub
run sed -i '/^MODULES=/s/)/ nvidia nvidia_modeset nvidia_uvm nvidia_drm)/' /etc/mkinitcpio.conf

# setup grub
run grub-install bootparititon --modules="all_video boot btrfs cat chain configfile echo efifwsetup efinet ext2 fat font gettext gfxmenu gfxterm gfxterm_background gzio halt help hfsplus iso9660 jpeg keystatus loadenv loopback linux ls lsefi lsefimmap lsefisystab lssal memdisk minicmd normal ntfs part_apple part_msdos part_gpt password_pbkdf2 png probe reboot regexp search search_fs_uuid search_fs_file search_label sleep smbios squash4 test true video xfs zfs zfscrypt zfsinfo play cpuid tpm cryptodisk luks lvm mdraid09 mdraid1x raid5rec raid6rec" --disable-shim-lock --efi-directory=/boot/efi
run grub-mkconfig -o /boot/grub/grub.cfg